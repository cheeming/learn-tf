spec:
  inputs:
    schedule_job:
      type: string
      default: ''
---
ss_tf_plan:
  stage: build
  image:
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/hashicorp/terraform:1.12
    entrypoint: [""]
  variables:
    TF_STATE_NAME: aws-instances
    TF_BACKEND_USERNAME: gitlab-ci-token
  before_script:
    - cd aws-instances
    - cp variables.tf.EXAMPLE variables.tf
    - terraform init -backend-config="address=https://gitlab.com/api/v4/projects/71332047/terraform/state/${TF_STATE_NAME}" -backend-config="lock_address=https://gitlab.com/api/v4/projects/71332047/terraform/state/${TF_STATE_NAME}/lock" -backend-config="unlock_address=https://gitlab.com/api/v4/projects/71332047/terraform/state/${TF_STATE_NAME}/lock" -backend-config="username=${TF_BACKEND_USERNAME}" -backend-config="password=${CI_JOB_TOKEN}" -backend-config="lock_method=POST" -backend-config="unlock_method=DELETE" -backend-config="retry_wait_min=5"
  script:
    - terraform plan -target=module.shadowsock_tokyo.aws_instance.ec2_server
  rules:
    - when: manual
      allow_failure: true

ss_tf_apply:
  extends: ss_tf_plan
  stage: deploy
  script:
    - terraform apply -auto-approve -target=module.shadowsock_tokyo.aws_instance.ec2_server
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && "$[[ inputs.schedule_job ]]" == "ss_tf_apply"
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: manual

ss_tf_apply_test:
  extends: ss_tf_plan
  stage: deploy
  script:
    - ./scripts/test_connect_ss.sh `terraform output -raw jp_instance_public_ip`
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && "$[[ inputs.schedule_job ]]" == "ss_tf_apply"
      needs: ['ss_tf_apply']
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: manual

ss_tf_destroy:
  extends: ss_tf_plan
  stage: deploy
  script:
    - terraform destroy -auto-approve -target=module.shadowsock_tokyo.aws_instance.ec2_server
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && "$[[ inputs.schedule_job ]]" == "ss_tf_destroy"
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: manual
